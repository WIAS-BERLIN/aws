
detectCores <- function(all.tests = FALSE) {
  # function from package multicore
  systems <- list(darwin  = "/usr/sbin/sysctl -n hw.ncpu 2>/dev/null",
  	          freebsd = "/sbin/sysctl -n hw.ncpu 2>/dev/null",
                  linux   = "grep processor /proc/cpuinfo 2>/dev/null|wc -l",
		  irix    = c("hinv |grep Processors|sed 's: .*::'", "hinv|grep '^Processor '|wc -l"),
		  solaris = "/usr/sbin/psrinfo -v|grep 'Status of.*processor'|wc -l")
  for (i in seq(systems))
    if(all.tests || length(grep(paste("^", names(systems)[i], sep=''), R.version$os)))
      for (cmd in systems[i]) {
        a <- gsub("^ +","",system(cmd, TRUE)[1])
        if (length(grep("^[1-9]", a))) return(as.integer(a))
      }
  NA
}
.onLoad <- function(lib, pkg){
  if(@HAS_OPENMP@)
  {
    a <- detectCores()
    b <- Sys.getenv("OMP_NUM_THREADS")

    if(b == "") b <- 0 else b <- as.integer(b)

    if(b <= 0){
      b <- 1
      cat("Environment variable OMP_NUM_THREADS is not set or invalid and will be set to 1.\n")
      cat("This may decrease computing performance. Please refer to the README file.\n")
    }
    else if(b == 1){
      cat("Environment variable OMP_NUM_THREADS is 1.\n")
      cat("This may decrease computing performance. Please refer to the README file.\n")     
    }
    num_threads <- min(a,b)
    Sys.setenv(OMP_NUM_THREADS=as.character(num_threads))
  }
}
